-----------------
TtHFitter package
-----------------
Authors:
  Michele Pinamonti <michele.pinamonti@gmail.com>
  Loic Valery <loic.valery@cern.ch>
Latest Update:   18 Jun 2015
Tag:             00-00-01


---------
Setup
---------
To setup just use the script:
    source setup.sh
(should work on any machine with access to afs)

To compile:
    make
(this will take as main code the file util/myFit.C)
or specify a custom main file as argument:
    make  util/myNewCustomFit.C
   
   
---------
How to   
---------
To run the code, after compiling (see "Setup"), use the command:
    ./myFit.exe  <option(s)>  <config file>

The configuration file (<config file>) is a text file containing all the information on the definition of samples and fit regions, including all the fit and draw options.
See the section "Config File" for more details.
As an example give a look at  util/myFit.config .
Most of the times the only file the user has to modify to get his fit is the configuration file. 

The other argument, <option(s)>, tells to the TtHFitter which operation(s) to perform. 
The possible operations are defined in the main file (e.g. util/myFit.C). 
For instance, if you use the default file util/myFit.C, the available options are:
    h : read input histograms (valid only if the proper option is spefified in the config file)
    n : read input ntuples (valid only if the proper option is spefified in the config file)
    w : create the RooStats xmls and workspace
    f : fit the workspace
    l : calculate exclusion limit
    s : calculate significance
    d : draw pre-fit plots
    p : draw post-fit plots
    

---------
Working example   
---------
To test the code with a simple example, let's follow this tutorial.

 1. Create the input histograms. To do it, run the code CreateHistograms.C:
      root -l -b -q CreateHistograms.C
    This will create some root files inside the directory ExampleInputs which will be used as input for the fitting tool.

 2. Compile the standard code (so simply with "make").

 3. Run the following command line:
      /myFit.exe  h  util/myFit.config
    This will read the histogrmas we created at step 1. and create the structure of the samples and regions, which will be saved into a new root file: FitExample_histos.root

 4. Now we can already create some pre-fit plots:
      /myFit.exe  d  util/myFit.config
    Look at the fiels created in the directory  FitExample/

 5. Then let's export to RooStats:
      /myFit.exe  w  util/myFit.config
    This should create two xml files:  FitExample.xml  and  FitExample_SR_1.xml
    and a workspace inside the root file:  results/FitExample_combined_FitExample_model.root.
    
 6. At this point we can perform the fit:
      /myFit.exe  f  util/myFit.config
    This command calls the external macro  FitCrossCheckForLimits.C  which runs on the worksapce we just created and performs the fit. 
    (By default it's a S+B fit).
    A bunch of output files is created by  FitCrossCheckForLimits.C  in the directory xcheckResults/FitExample, 
    and, in addition, a pull plot is created in the directory FitExample/.


---------
Config File   
---------
Here's a list of the inputs and options which can be specifed in the config file:

 - The structure of the file shoudl be the following:

     <ObjectType>: <ObjectName>
       <ObjectProperty>: <Value>
       <ObjectProperty>: <Value>
       ...
     
     <ObjectType>: <ObjectName>
       <ObjectProperty>: <Value>
       <ObjectProperty>: <Value>
       ...

     ...

    (NB: note the blank line between the obects!!)
    
 - The file should contain:
     * exactly one object of type "Fit"
     * at least one object of type "Sample"
     * at least one object of type "Region"
     * any number of objects of type "Systematic" (even 0 should be ok)
   Each object should have unique <ObjectName>.
      
 - Then, for each object type, here's a PARTIAL list of properties to be speficied:

    Fit:
      Label            -> it's the label which will be showed on the plots
      POI              -> the name of the parameter of interest; this should correspond to a NormFactor defined below
      ReadFrom         -> can be HIST or NTUP; default is HIST
      FitType          -> can be SPLUSB (default) or BONLY to fit under the s+b or the b-only hypothesis
      FitRegion        -> can be CRSR (default) or CRONLY to fit considering both signal and control regions in the fit, or only control regions
      HistoPath        -> valid only for option HIST above is selected; it's the path where the input root files containing the histograms are stored
      NtuplePath(s)    -> valid only for option NTUP; it's the path(s) where the input root files containing the ntuples are stored
      MCstatThreshold  -> if set it will add the MC stat uncertainty to the fit (and to the plots); a NP will be added for each bin with an MC stat uncertainty > this threshold (relative)
      IntCodeOverall   -> interpolation code used for the normalization component of systematics (should match the one used in RooStats)
      IntCodeShape     -> interpolation code used for the shape component of systematics (should match the one used in RooStats)
      LumiScale        -> this factor will scale all the MC samples
      DebugLevel       -> 0 or 1
      SystPruningShape -> Lower threshold to remove a shape systematic from the fit/limit (suppression is done per sample and per region) (Ex: 0.02 for 2%)
      SystPruningNorm  -> Lower threshold to remove a normalisation systematic from the fit/limit (suppression is done per sample and per region) (Ex: 0.02 for 2%)
      SystControlPlots -> if set to true, plots will be dumped showing the shape effect of a given systematic (before and after smoothing/symmetrisation)
      PlotOptions      -> a set os options for plotting:
        YIELDS : if set, the legend will be one-column and will include the yileds; otherwise two-columns and no yields
        ...
      CorrelationThreshold -> Threshold used to draw the correaltion matrix (only systematics with at least one correlation larger than than draw) (0.05->5%)
      HistoChecks      -> NOCRASH: means that if an error is found in the input histograms, the code continues (with only warnings) -- default leads to a crash in case of problem
      ...
      
    Sample:
      Title            -> title shown on the legends
      Type             -> can be SIGNAL, BACKGROUND or DATA; default is BACKGROUND
      FillColor        -> histogram fill color (not valid for data)
      LineColor        -> histogram line color
      HistoFile        -> valid only for option HIST; which root file to read (excluding the suffix ".root"); this will be combined with Fit->HistoPath to build the full path
      NtuplePath(s)    -> valid only for option NTUP; it's the path(s) where the input root files containing the ntuples are stored
      ...
      
    Region:
      Label            -> it's the label which will be showed on the plots and specifies which region is shown
      Type             -> can be SIGNAL, CONTROL or VALIDATION; used depending on Fit->FitType; if VALIDATION is set, the region is never fitted; default is SIGNAL
      HistoName        -> valid only for option HIST; it's the name of the histogram to read from each of the root files
      VariableTitle    -> it's the label which will be displayed on the x-axis in the plots
      ShortLabel       -> same as above, but a shorter version for plots with smaller available place
      HistoFile        -> only for option HIST, the file name to be used
      HistoName        -> only for option HIST, the histogram name to be used
      NtuplePathSuff(s)-> only for option NTUP, the path sufix (or suffixes, comma-separated) where to find the ntuple files for this region
      Variable         -> only for option NTUP, the variable (or expression) inside the ntuple to plot
      Selection        -> only for option NTUP, the selection done on the ntuple for this region
      MCweight         -> only for option NTUP, the additional weight sed in this region (for MC samples only)
      Rebin            -> ...
      Binning          -> ...
      ...
      
    Systematic:
      Title            -> title of the systematic (will be shown in plots)
      Type             -> can be HISTO or OVERALL
      Samples          -> comma-separated list of samples on which to apply the systematic
      Exclude          -> comma-separated list of samples to exclude (used when "all" is indicated as "Samples")
      Smoothing        -> smoothing code to apply; use 40 for default smoothing; for no smoothing, skip the line
      Symmetrisation   -> can be ONESIDED or TWOSIDED (...); for no symmetrisation, skip the line
      OverallUp        -> for OVERALL systematic: the relative "up" shift (0.1 means +10%)
      OverallDown      -> for OVERALL systematic: the relative "down" shift (-0.1 means -10%)

      HistoPathUp      -> only for option HIST, for HISTO systematic: histogram file path for systematic up variation
      HistoPathDown    -> only for option HIST, for HISTO systematic: histogram file path for systematic down variation
      HistoPathSufUp   -> only for option HIST, for HISTO systematic: suffix of the histogram file names for systematic up variation
      HistoPathSufDown -> only for option HIST, for HISTO systematic: suffix of the histogram file names for systematic down variation
      HistoFileUp      -> only for option HIST, for HISTO systematic: histogram file name for systematic up variation
      HistoFileDown    -> only for option HIST, for HISTO systematic: histogram file name for systematic down variation
      HistoFileSufUp   -> only for option HIST, for HISTO systematic: suffix of the histogram file names for systematic up variation
      HistoFileSufDown -> only for option HIST, for HISTO systematic: suffix of the histogram file names for systematic down variation
      HistoNameUp      -> only for option HIST, for HISTO systematic: histogram name for systematic up variation
      HistoNameDown    -> only for option HIST, for HISTO systematic: histogram name for systematic down variation
      HistoNameSufUp   -> only for option HIST, for HISTO systematic: suffix of the histogram names for systematic up variation
      HistoNameSufDown -> only for option HIST, for HISTO systematic: suffix of the histogram names for systematic down variation
      
      WeightUp         -> only for option NTUP, for HISTO systematic: weight for systematic up variation
      WeightDown       -> only for option NTUP, for HISTO systematic: weight for systematic down variation
      WeightSufUp      -> only for option NTUP, for HISTO systematic: additional weight for systematic up variation
      WeightSufDown    -> only for option NTUP, for HISTO systematic: additional weight for systematic down variation
      NtuplePathSufUp  -> only for option NTUP, for HISTO systematic: suffix of the ntuple file paths for systematic up variation
      NtuplePathSufDown-> only for option NTUP, for HISTO systematic: suffix of the ntuple file paths for systematic down variation
      NtuplePathsUp    -> only for option NTUP, for HISTO systematic: ntuple file path for systematic up variation
      NtuplePathsDown  -> only for option NTUP, for HISTO systematic: ntuple file path for systematic down variation
      NtupleFileSufUp  -> only for option NTUP, for HISTO systematic: suffix of the ntuple file names for systematic up variation
      NtupleFileSufDown-> only for option NTUP, for HISTO systematic: suffix of the ntuple file names for systematic down variation
      NtupleFilesUp    -> only for option NTUP, for HISTO systematic: ntuple file name for systematic up variation
      NtupleFilesDown  -> only for option NTUP, for HISTO systematic: ntuple file name for systematic down variation
      NtupleNameSufUp  -> only for option NTUP, for HISTO systematic: suffix of the ntuple names for systematic up variation
      NtupleNameSufDown-> only for option NTUP, for HISTO systematic: suffix of the ntuple names for systematic down variation
      NtupleNamesUp    -> only for option NTUP, for HISTO systematic: ntuple name for systematic up variation
      NtupleNamesDown  -> only for option NTUP, for HISTO systematic: ntuple name for systematic down variation
      ...

---------
Output Directories Structure
---------
   * For each TtHFit objetc, a diretory is created, with the same name as the Fit Name
   * Inside this direcotry, at every step, some outputs are created, following the structure described above
   
   Plots/              -> contains the data/MC plots, pre- and post-fit, for all the Signal, Control and Validation regions, including the summary plots
   RooStats/           -> contains the workspace(s) and the xmls
   FitResults/         -> contains the output from FitCrossCheckForLimits
   Limits/             -> contains the outputs from the limit-setting code
   Significance/       -> contains the outputs from the significance code
   Systematics/        -> contains the plots for the syst variations
   Histograms/         -> contains the root file(s) with all the inputs
